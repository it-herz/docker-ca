#!/bin/bash

mkdir -p /usr/lib/ssl/CA
mkdir -p /var/www

IFS=';;;;'
envs=(`cat /proc/1/environ | xargs -0 -n 1 echo ';;;;'`)
unset IFS

for _curVar in "${envs[@]}"
do
    value=`echo "$_curVar" | awk -F = '{print $2}'`
    name=`echo "$_curVar" | awk -F = '{print $1}' | xargs`
    if [ "$name" == "" ]
    then
      continue
    fi
    ENV[$name]="$value"
done


WEBDIR=/var/www

if [ ! -f /usr/lib/ssl/CA/initialized ]
then
  mkdir -p /usr/lib/ssl/CA/newcerts
  mkdir -p /usr/lib/ssl/CA/private
  mkdir -p /storage/crt
  mkdir -p /storage/req
  mkdir -p /etc/ssl/p12
  mkdir -p /var/www/certs
  mkdir -p /var/www/crl

  cp /openssl.cnf /usr/lib/ssl/
  sed -i "s~#DIR#~${ENV["DIR"]}~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#WEBDIR#~${ENV["WEBDIR"]}~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#DAYS#~${ENV["DAYS]}~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#CRLDAYS#~${ENV["CRLDAYS]}~ig" /usr/lib/ssl/openssl.cnf

  sed -i "s~#KEYLENGTH#~$KEYLENGTH~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#COUNTRY#~$COUNTRY~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#STATE#~$STATE~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#LOCALITY#~$LOCALITY~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#ORGANIZATION#~$ORGANIZATION~ig" /usr/lib/ssl/openssl.cnf
  sed -i "s~#OU#~$OU~ig" /usr/lib/ssl/openssl.cnf

  echo "$PASSWORD" >/password
  cd /usr/lib/ssl/CA
  echo '$STARTSERIAL' >serial
  echo '$STARTCRL' >crlnumber

  touch /usr/lib/ssl/CA/index.txt

  cp /ca.req /usr/lib/ssl/CA/ca.req
  sed -i "s~#DIR#~${ENV["DIR"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#WEBDIR#~${ENV["WEBDIR"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#DAYS#~${ENV["DAYS"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#CRLDAYS#~${ENV["CRLDAYS"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#KEYLENGTH#~${ENV["KEYLENGTH"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#COUNTRY#~${ENV["COUNTRY"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#STATE#~${ENV["STATE"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#LOCALITY#~${ENV["LOCALITY"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#ORGANIZATION#~${ENV["ORGANIZATION"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#OU#~${ENV["OU"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#CLIENTDAYS#~${ENV["CLIENTDAYS"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#CAHOST#~${ENV["CAHOST"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#PASSWORD#~${ENV["PASSWORD"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#EMAIL#~${ENV["EMAIL"]}~ig" /usr/lib/ssl/CA/ca.req
  sed -i "s~#WEBHOST#~${ENV["$WEBHOST"]}~ig" /usr/lib/ssl/CA/ca.req

  openssl req -new -config /usr/lib/ssl/CA/ca.req -keyout /usr/lib/ssl/CA/private/cakey.pem -utf8 -out /usr/lib/ssl/CA/careq.pem
  openssl ca -create_serial -out /usr/lib/ssl/CA/cacert.pem -days $DAYS -key $PASSWORD -batch -config /usr/lib/ssl/CA/ca.req \
                            -keyfile /usr/lib/ssl/CA/private/cakey.pem -selfsign \
                            -extensions v3_ca \
                            -utf8 -infiles /usr/lib/ssl/CA/careq.pem
                           
  openssl ca -keyfile /usr/lib/ssl/CA/private/cakey.pem -cert /usr/lib/ssl/CA/cacert.pem -gencrl -out /var/www/ca.crl -passin file:/password
  openssl x509 -in /usr/lib/ssl/CA/cacert.pem -out /var/www/ca.der -outform DER

  cp /usr/lib/ssl/CA/cacert.pem /var/www/ca.crt
  cp /usr/lib/ssl/CA/cacert.pem /storage/crt/ca.cert
  cp /usr/lib/ssl/CA/cacert.pem /storage/crt/$CA_HOST.cert
  cp /usr/lib/ssl/CA/private/cakey.pem /etc/ssl/private/$CA_HOST.key
  touch /usr/lib/ssl/CA/initialized
fi
exit 0
